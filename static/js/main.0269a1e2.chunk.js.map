{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","result","setResult","handleclick","e","concat","target","name","clear","backspace","slice","length","calculate","eval","toString","className","type","value","onClick","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"q0BAIA,SAASA,MAEP,cAA0BC,oDAAS,IAAnC,8KAAOC,OAAP,cAAcC,UAAd,cACMC,YAAc,SAAAC,GAClBF,UAAUD,OAAOI,OAAOD,EAAEE,OAAOC,QAE7BC,MAAQ,WACZN,UAAU,KAENO,UAAY,SAACL,GACjBF,UAAUD,OAAOS,MAAMN,EAAEH,OAAOU,OAAQ,KAEpCC,UAAY,SAAZA,UAAYR,GACpB,IACEF,UAAUW,KAAKZ,QAAQa,YACxB,MAAMV,GACLF,UAAU,WAKV,OACE,6HACA,mEAAKa,UAAU,YAAf,UACG,0FACD,oEACA,4EACE,oEAAOC,KAAK,OAAOC,MAAOhB,WAG9B,mEAAKc,UAAU,SAAf,UACE,qEAAQA,UAAU,YAAYG,QAASV,MAAOW,GAAG,QAAjD,mBACA,qEAAQJ,UAAU,YAAYG,QAAST,UAAWU,GAAG,YAArD,eACA,qEAAQJ,UAAU,YAAYR,KAAK,IAAIW,QAASf,YAAhD,eAEA,qEAAQI,KAAK,IAAIW,QAASf,YAA1B,eACA,qEAAQI,KAAK,IAAIW,QAASf,YAA1B,eACA,qEAAQI,KAAK,IAAIW,QAASf,YAA1B,eAEA,qEAASY,UAAU,YAAYR,KAAK,IAAIW,QAASf,YAAjD,eAEA,qEAAQI,KAAK,IAAIW,QAASf,YAA1B,eACA,qEAAQI,KAAK,IAAIW,QAASf,YAA1B,eACA,qEAAQI,KAAK,IAAIW,QAASf,YAA1B,eAEA,qEAAQY,UAAU,YAAYR,KAAK,IAAIW,QAASf,YAAhD,eAEA,qEAAQI,KAAK,IAAIW,QAASf,YAA1B,eACA,qEAAQI,KAAK,IAAIW,QAASf,YAA1B,eACA,qEAAQI,KAAK,IAAIW,QAASf,YAA1B,eAEA,qEAAQY,UAAU,YAAYR,KAAK,IAAIW,QAASf,YAAhD,eAEA,qEAAQI,KAAK,IAAIW,QAASf,YAA1B,eACA,qEAAQI,KAAK,IAAIW,QAASf,YAA1B,eACA,qEAAQY,UAAU,YAAYG,QAASN,UAAWO,GAAG,SAArD,uBAQSpB,2B,iICvDAqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChC,EAAA,EAAD,MAEFiC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0269a1e2.chunk.js","sourcesContent":["import './App.css';\nimport { useState,useEffect } from 'react'\n\n\nfunction App() {\n \n  const [result,setResult]= useState(\"\");\n  const handleclick = e =>{\n    setResult(result.concat(e.target.name));\n  }\n  const clear = () =>{\n    setResult(\"\"); \n  }\n  const backspace = (e) =>{\n    setResult(result.slice(e,result.length -1)); \n  }\n  const calculate = e =>{\ntry {\n  setResult(eval(result).toString()); \n}catch(e){\n  setResult(\"Error\")\n}\n\n   \n  }\n  return (\n    <>\n    <div className=\"container\">\n       <h1> Calculator</h1>\n      <br/>\n      <form >\n        <input type=\"text\" value={result}></input>\n      </form>\n    \n    <div className=\"keypad\">\n      <button className=\"highlight\" onClick={clear} id=\"Clear\">Clear</button>\n      <button className=\"highlight\" onClick={backspace} id=\"Backspace\">C</button>\n      <button className=\"highlight\" name=\"/\" onClick={handleclick}>/</button>\n\n      <button name=\"9\" onClick={handleclick}>9</button>\n      <button name=\"8\" onClick={handleclick}>8</button>\n      <button name=\"7\" onClick={handleclick}>7</button>\n      \n      <button  className=\"highlight\" name=\"*\" onClick={handleclick}>*</button>\n\n      <button name=\"6\" onClick={handleclick}>6</button>\n      <button name=\"5\" onClick={handleclick}>5</button>\n      <button name=\"4\" onClick={handleclick}>4</button>\n      \n      <button className=\"highlight\" name=\"-\" onClick={handleclick}>-</button>\n      \n      <button name=\"3\" onClick={handleclick}>3</button>\n      <button name=\"2\" onClick={handleclick}>2</button>\n      <button name=\"1\" onClick={handleclick}>1</button>\n      \n      <button className=\"highlight\" name=\"+\" onClick={handleclick}>+</button>\n      \n      <button name=\".\" onClick={handleclick}>.</button>\n      <button name=\"0\" onClick={handleclick}>0</button>\n      <button className=\"highlight\" onClick={calculate} id=\"result\">=</button>\n\n    </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}